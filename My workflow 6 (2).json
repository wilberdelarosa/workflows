{
  "name": "My workflow 6",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "5bfeb64c-8556-450d-ac31-ddf20d7b2eb5",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -2224,
        -528
      ],
      "webhookId": "construmax-bot-v2",
      "credentials": {
        "telegramApi": {
          "id": "0cS1NXwkCYeYHNOb",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "id": "6d43ce21-f664-464a-afee-55d990a4245c",
      "name": "Simple Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -1936,
        624
      ]
    },
    {
      "parameters": {
        "options": {
          "temperature": 0.2
        }
      },
      "id": "afd8565f-8398-49e8-aaae-2a2534e46669",
      "name": "Groq Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatGroq",
      "typeVersion": 1,
      "position": [
        -2368,
        176
      ],
      "credentials": {
        "groqApi": {
          "id": "3jmMFvq9ZHfrrvTP",
          "name": "Groq account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "üëã Hola, soy *Manuel Herrera* de *Construmax EIRL*.\n\nPuedo ayudarte a:\n‚Ä¢ Ver cat√°logo y precios\n‚Ä¢ Validar stock\n‚Ä¢ Generar *cotizaci√≥n* (chat o PDF)\n\nEscribe, por ejemplo:\n‚Ä¢ `cat√°logo`\n‚Ä¢ `precio grava`\n‚Ä¢ `stock de arena`\n‚Ä¢ `cotiza 10 m3 de grava gris a nombre de Wilber, 809-555-0000, Friusa`\n‚Ä¢ `cotizaci√≥n PDF`\n",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "3b8a4186-7450-48ab-97d3-f6f2784e9575",
      "name": "Bienvenida",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1200,
        -912
      ],
      "webhookId": "5054850b-28ba-449c-b518-e5725fcf65ac",
      "credentials": {
        "telegramApi": {
          "id": "0cS1NXwkCYeYHNOb",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Eres un router de intenci√≥n para un bot de materiales de construcci√≥n (Construmax / Alito EIRL).\nTu √∫nica tarea es CLASIFICAR y EXTRAER ENTIDADES del mensaje del usuario.\n\nResponde **SOLO** con JSON v√°lido (sin texto adicional) siguiendo ESTE esquema exacto:\n{\n  \"intent\": \"help|catalogo|precio|stock|cotizacion_chat|cotizacion_pdf\",\n  \"entities\": {\n    \"material\": null | string,\n    \"cantidad\": null | number,\n    \"unidad\": null | \"m3\" | \"m¬≥\" | \"unidad\" | \"dia\" | \"d√≠a\",\n    \"nombre\": null | string,\n    \"telefono\": null | string,\n    \"direccion\": null | string\n  }\n}\n\nREGLAS:\n- Usa SOLO uno de los intents permitidos.\n- Normaliza a min√∫sculas.\n- Extrae \"material\" si menciona grava, arena, caliche, grava gris, grava caliza, grava triturada blanca, etc.\n- Si pide \"PDF\", el intent es \"cotizacion_pdf\".\n- Si dice \"cotiza\", \"presupuesto\", \"cotizaci√≥n\" (sin mencionar PDF), es \"cotizacion_chat\".\n- \"precio\", \"cu√°nto cuesta\", \"tarifa\" ‚Üí \"precio\".\n- \"stock\", \"disponibilidad\", \"hay existencias\" ‚Üí \"stock\".\n- \"cat√°logo\", \"lista de productos\", \"¬øqu√© tienen?\" ‚Üí \"catalogo\".\n- Si es saludo, duda general u otra cosa ‚Üí \"help\".\n\nEXTRACCI√ìN:\n- cantidad: n√∫mero (convierte ‚Äú10m3‚Äù, ‚Äú10 m¬≥‚Äù a 10). \"unidad\": m3/m¬≥ si aplica.\n- nombre: si detectas ‚Äúsoy X‚Äù, ‚Äúa nombre de X‚Äù.\n- telefono: acepta formatos con espacios, guiones o sin separadores.\n- direccion: cualquier referencia de zona/barrio/ciudad.\n\nSi no puedes extraer un campo, devuelve null (no inventes).\n\nMensaje del usuario:\n {{ $('Telegram Trigger').item.json.message.text }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Responde SOLO con JSON v√°lido. S√© estricto."
        }
      },
      "id": "5ffc6e91-b1d0-442c-a593-f60104ee9b22",
      "name": "Clasificar Intenci√≥n (AI)",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -2000,
        -528
      ]
    },
    {
      "parameters": {
        "jsCode": "let raw = $input.first().json.output ?? $input.first().json.text ?? $input.first().json.response ?? '';\nif (typeof raw === 'object' && raw !== null) raw = JSON.stringify(raw);\nraw = String(raw).trim()\n  .replace(/^```(?:json)?/i, '')\n  .replace(/```$/i, '')\n  .trim();\n\nlet p = {};\ntry { p = JSON.parse(raw); } catch { p = {}; }\n\nconst allowed = new Set(['help','catalogo','precio','stock','cotizacion_chat','cotizacion_pdf']);\nlet intent = (p.intent || '').toString().trim().toLowerCase();\nif (!allowed.has(intent)) intent = 'help';\n\nconst e = p.entities || {};\nreturn [{\n  json: {\n    intent,\n    entities: {\n      material:  e.material  ?? null,\n      cantidad:  e.cantidad  ?? null,\n      unidad:    e.unidad    ?? null,\n      nombre:    e.nombre    ?? null,\n      telefono:  e.telefono  ?? null,\n      direccion: e.direccion ?? null\n    }\n  }\n}];\n"
      },
      "id": "bb5f2020-e15b-4a3c-9e85-01abf8b39c77",
      "name": "Parse Intent JSON",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1648,
        -528
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "üìã *¬øQu√© puedo hacer?*\n‚Ä¢ Cat√°logo: escribe `cat√°logo`\n‚Ä¢ Precio: `precio grava`\n‚Ä¢ Stock: `stock de arena`\n‚Ä¢ Cotizar en chat: `cotiza 10 m3 de grava gris ...`\n‚Ä¢ Cotizaci√≥n PDF: `cotizaci√≥n PDF` (te pedir√© datos si faltan)\n",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "id": "09833dfe-7b3c-400f-89ba-5108ff67e0a5",
      "name": "Ayuda",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -912,
        -720
      ],
      "webhookId": "1fc9e5fc-10a5-424f-a868-e88a4a779a7c",
      "credentials": {
        "telegramApi": {
          "id": "0cS1NXwkCYeYHNOb",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "16_j7l-qc2jw5YobRcts85aenlNkQFRzwohhAH8o6h3g",
          "mode": "list",
          "cachedResultName": "GOOGLE_SHEETS_ID_CONSTRUMAX",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/16_j7l-qc2jw5YobRcts85aenlNkQFRzwohhAH8o6h3g/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1852205406,
          "mode": "list",
          "cachedResultName": "Catalogo0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/16_j7l-qc2jw5YobRcts85aenlNkQFRzwohhAH8o6h3g/edit#gid=1852205406"
        },
        "options": {}
      },
      "id": "610b459a-5b3d-47ee-b19c-560853227c0a",
      "name": "Leer Cat√°logo (Sheets)",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -912,
        -240
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "EfYKXXPrUcBH56ds",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 1) Todas las filas que vienen del nodo \"Leer Cat√°logo (Sheets)\"\nconst rows = $input.all().map(({ json }) => json ?? {});\n\n// 2) Recuperar el material detectado por el nodo \"Parse Intent JSON\"\nconst intentObj = $item(0, 'Parse Intent JSON').json || {};\n// normaliza: min√∫sculas + sin tildes + √± -> n\nconst mat = (intentObj.entities?.material || '')\n  .toString()\n  .toLowerCase()\n  .normalize('NFD').replace(/[\\u0300-\\u036f]/g,'')\n  .replace(/√±/g,'n')\n  .trim();\n\n// 3) Filtrado tolerante\n// Si tu hoja tiene columna 'slug', preferimos slug; si no, usamos 'material'\nconst norm = (s) => String(s || '')\n  .toLowerCase()\n  .normalize('NFD').replace(/[\\u0300-\\u036f]/g,'')\n  .replace(/√±/g,'n')\n  .trim();\n\nconst filtered = mat\n  ? rows.filter(r => norm(r.slug ?? r.material).includes(mat))\n  : rows;\n\n// 4) Armar l√≠neas de respuesta\nconst lines = filtered.map(r => {\n  const itbis = (String(r.itbis).toLowerCase() === 'true' || r.itbis === true) ? ' + ITBIS' : '';\n  const stock = (r.stock != null && r.stock !== '') ? ` | Stock: ${r.stock}` : '';\n  return `‚Ä¢ ${r.material}: ${r.precio}${itbis}${stock}`;\n});\n\n// 5) Mensaje final\nconst msg = lines.length\n  ? lines.join('\\n')\n  : 'No encontr√© ese material en el cat√°logo. Escribe \"cat√°logo\" para ver la lista completa.';\n\nreturn [{ json: { msg } }];\n"
      },
      "id": "f85c7c7c-3cbd-4b11-82d0-55fb4db3f536",
      "name": "Formatear Respuesta Cat√°logo/Precio/Stock",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2368,
        544
      ],
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "1380183859",
        "text": "={{ $json.output }}",
        "additionalFields": {}
      },
      "id": "d8f4e0b8-e94b-468b-a68e-1c0642b60246",
      "name": "Enviar Respuesta",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -240,
        -240
      ],
      "webhookId": "a6301415-4d3f-4621-9c0f-9f7780ff4029",
      "credentials": {
        "telegramApi": {
          "id": "0cS1NXwkCYeYHNOb",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "Convierte el mensaje del usuario en JSON de cotizaci√≥n.\nResponde SOLO con JSON v√°lido:\n{\n  \"cliente\": {\n    \"nombre\": \"\",\n    \"telefono\": \"\",\n    \"direccion\": \"\"\n  },\n  \"items\": [ {\"material\":\"\",\"cantidad\":0,\"unidad\":\"m3|dia\"} ]\n}\nMensaje: {{ $('Telegram Trigger').item.json.message.text }}\n\n\n\ntienes herramienntas para preguntar si flatan datos, para guardar cotizaciones y enviar resumenes",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "Responde √∫nicamente con JSON v√°lido, sin texto extra."
        }
      },
      "id": "f0c3115f-02bd-4a11-9114-e81e0dfd1824",
      "name": "Extraer Datos (AI‚ÜíJSON)",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -992,
        336
      ]
    },
    {
      "parameters": {
        "jsCode": "let data = {};\ntry { data = JSON.parse($json.output || '{}'); } catch(e){ data = {}; }\nconst cliente = data.cliente||{};\nconst items = Array.isArray(data.items)? data.items: [];\nconst missing = [];\nif (!cliente.nombre) missing.push('nombre');\nif (!cliente.telefono) missing.push('tel√©fono');\nif (!cliente.direccion) missing.push('direcci√≥n');\nif (!items.length) missing.push('items (material,cantidad,unidad)');\nreturn [{json: {cliente, items, missing}}];\n"
      },
      "id": "c41639ac-4ba2-4a8f-bcf5-c117378c621e",
      "name": "Parse JSON Cotizaci√≥n",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -560,
        48
      ]
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ 'Para continuar necesito: ' + $json.missing.join(', ') + '. Por favor env√≠alos y seguimos.' }}",
        "additionalFields": {}
      },
      "id": "baf8a451-b21d-4a62-8899-528d570af0ca",
      "name": "Pedir Datos Faltantes",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -560,
        624
      ],
      "webhookId": "2b1843e0-7875-405d-91c6-f39f88b3150b",
      "credentials": {
        "telegramApi": {
          "id": "0cS1NXwkCYeYHNOb",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "16_j7l-qc2jw5YobRcts85aenlNkQFRzwohhAH8o6h3g",
          "mode": "list",
          "cachedResultName": "GOOGLE_SHEETS_ID_CONSTRUMAX",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/16_j7l-qc2jw5YobRcts85aenlNkQFRzwohhAH8o6h3g/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1852205406,
          "mode": "list",
          "cachedResultName": "Catalogo0",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/16_j7l-qc2jw5YobRcts85aenlNkQFRzwohhAH8o6h3g/edit#gid=1852205406"
        },
        "options": {}
      },
      "id": "164efee6-044c-43ca-b624-57db049c39f0",
      "name": "Leer Cat√°logo (para c√°lculo)",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -272,
        48
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "EfYKXXPrUcBH56ds",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// 1) Filas del cat√°logo (vienen como 'items' desde Google Sheets -> read)\nconst catalogRows = items.map(i => i.json ?? {});\n\n// 2) Recuperar el JSON de cotizaci√≥n del nodo \"Parse JSON Cotizaci√≥n\"\n//    (aunque este node no est√© conectado directamente, $item(<idx>, '<NodeName>') lo trae)\nconst parsed = $item(0, 'Parse JSON Cotizaci√≥n').json || {};\nconst cliente = parsed.cliente || {};\nconst orderItems = Array.isArray(parsed.items) ? parsed.items : [];\n\n// 3) Mapa de materiales del cat√°logo (evita warning usando Map())\nconst catMap = new Map();\nfor (const r of catalogRows) {\n  if (!r || !r.material) continue;\n  catMap.set(String(r.material).toLowerCase(), {\n    material: r.material,\n    precio: Number(r.precio ?? 0),\n    itbis: (String(r.itbis).toLowerCase() === 'true' || r.itbis === true),\n  });\n}\n\n// 4) Calcular detalle\nconst detalle = [];\nlet totalGeneral = 0;\n\nfor (const it of orderItems) {\n  const key = String(it.material || '').toLowerCase();\n  const cat = catMap.get(key);\n  if (!cat) {\n    // Si no est√° en cat√°logo, lo ignoramos o podr√≠as anotarlo para avisar al usuario\n    continue;\n  }\n  const cant = Number(it.cantidad ?? 0);\n  const precio = cat.precio;\n  const subtotal = cant * precio;\n  const impuesto = cat.itbis ? subtotal * 0.18 : 0;\n  const total = subtotal + impuesto;\n  totalGeneral += total;\n\n  detalle.push({\n    material: cat.material,\n    cantidad: cant,\n    unidad: it.unidad || 'm3',\n    precio,\n    itbis: cat.itbis,\n    subtotal,\n    impuesto,\n    total,\n  });\n}\n\n// 5) Armar salida\nconst numero = `COT-${Date.now()}`;\nconst fecha = new Date().toLocaleDateString('es-DO');\n\nconst mensaje = [\n  `üìÑ Cotizaci√≥n ${numero} (${fecha})`,\n  `Cliente: ${cliente.nombre || ''} | Tel: ${cliente.telefono || ''}`,\n  `Direcci√≥n: ${cliente.direccion || ''}`,\n  '',\n  ...detalle.map(d => `‚Ä¢ ${d.material} ‚Äî ${d.cantidad} ${d.unidad} x ${d.precio} = ${d.subtotal}${d.itbis ? ' (+ITBIS)' : ''} ‚Üí ${d.total}`),\n  '',\n  `TOTAL: ${totalGeneral}`,\n].join('\\n');\n\nreturn [{\n  json: {\n    mensaje,\n    cotizacion: {\n      numero,\n      fecha,\n      cliente,\n      materiales: detalle,\n      totalGeneral,\n    }\n  }\n}];\n"
      },
      "id": "8404e3f2-2f53-4df9-bea8-6df2addf570e",
      "name": "Calcular Cotizaci√≥n (Code)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2224,
        1424
      ],
      "disabled": true
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.mensaje }}",
        "additionalFields": {}
      },
      "id": "19fa14cb-1a27-4676-9c3e-f9c80abcf6ef",
      "name": "Enviar Resumen (Chat)",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -560,
        432
      ],
      "webhookId": "d9f84702-a34a-4a4b-afa5-b3747e9e2189",
      "credentials": {
        "telegramApi": {
          "id": "0cS1NXwkCYeYHNOb",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "16_j7l-qc2jw5YobRcts85aenlNkQFRzwohhAH8o6h3g",
          "mode": "list",
          "cachedResultName": "GOOGLE_SHEETS_ID_CONSTRUMAX",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/16_j7l-qc2jw5YobRcts85aenlNkQFRzwohhAH8o6h3g/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1097847576,
          "mode": "list",
          "cachedResultName": "Cotizaciones",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/16_j7l-qc2jw5YobRcts85aenlNkQFRzwohhAH8o6h3g/edit#gid=1097847576"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "numero_cotizacion": "={{ $json.cotizacion.numero || $json.numero || ('COT-' + Date.now()) }}",
            "fecha": "={{ $json.cotizacion.fecha || new Date().toLocaleDateString('es-DO') }}",
            "materiales_json": "=={{ JSON.stringify($json.cotizacion.materiales) }}\n",
            "total_general": "={{ $json.cotizacion.totalGeneral }}",
            "cliente_direccion": "={{ $json.cotizacion.cliente.direccion }}",
            "cliente_telefono": "={{ $json.cotizacion.cliente.telefono }}",
            "cliente_nombre": "={{ $json.cotizacion.cliente.nombre }}"
          },
          "matchingColumns": [
            "numero_cotizacion"
          ],
          "schema": [
            {
              "id": "numero_cotizacion",
              "displayName": "numero_cotizacion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "fecha",
              "displayName": "fecha",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "cliente_nombre",
              "displayName": "cliente_nombre",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "cliente_telefono",
              "displayName": "cliente_telefono",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "cliente_direccion",
              "displayName": "cliente_direccion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "total_general",
              "displayName": "total_general",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "materiales_json",
              "displayName": "materiales_json",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "id": "017f53a5-8483-4774-a77c-0fdb3e0177b4",
      "name": "Guardar Cotizaci√≥n (Sheets)",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -560,
        240
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "EfYKXXPrUcBH56ds",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const c = $json.cotizacion;\nconst rows = c.materiales.map(d=>`\\n<tr>\\n  <td>${d.material}</td><td>${d.cantidad} ${d.unidad}</td>\\n  <td>${d.precio}</td><td>${d.subtotal}</td><td>${d.itbis?'18%':'0%'}</td><td>${d.total}</td>\\n</tr>`).join('');\nconst html = `<!doctype html><html><head><meta charset='utf-8'>\\n<style>body{font-family:Arial;margin:24px;color:#111} h1{margin:0}\\ntable{width:100%;border-collapse:collapse;margin-top:16px}\\nth,td{border:1px solid #ddd;padding:8px;text-align:left}\\ntfoot td{font-weight:bold}\\n</style></head><body>\\n<h1>Construmax EIRL</h1>\\n<p>Hola ${c.cliente.nombre}, soy Manuel Herrera, y esta es tu cotizaci√≥n personalizada.</p>\\n<p><b>Cotizaci√≥n:</b> ${c.numero} ‚Äî <b>Fecha:</b> ${c.fecha}</p>\\n<p><b>Tel:</b> ${c.cliente.telefono} ‚Äî <b>Direcci√≥n:</b> ${c.cliente.direccion}</p>\\n<table><thead><tr><th>Material</th><th>Cant.</th><th>Precio</th><th>Subtotal</th><th>ITBIS</th><th>Total</th></tr></thead>\\n<tbody>${rows}</tbody>\\n<tfoot><tr><td colspan='5'>TOTAL</td><td>${c.totalGeneral}</td></tr></tfoot>\\n</table>\\n<p style='margin-top:24px;font-size:12px;color:#555'>Validez: 7 d√≠as. Precios sujetos a cambios seg√∫n disponibilidad y zona de entrega.</p>\\n</body></html>`;\nreturn [{json:{html}}];\n"
      },
      "id": "2dcbaab7-0f85-4e18-bffb-a0f3d873131a",
      "name": "Construir HTML (Code)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2192,
        640
      ]
    },
    {
      "parameters": {
        "operation": "URL/HTML to PDF",
        "convertType": "htmlToPDF",
        "html": "={{ $json.output }}",
        "advancedOptions": {}
      },
      "id": "d8225702-b052-4b16-bf24-ba4e68044646",
      "name": "PDFco Api",
      "type": "n8n-nodes-pdfco.PDFco Api",
      "typeVersion": 1,
      "position": [
        304,
        48
      ],
      "credentials": {
        "pdfcoApi": {
          "id": "bD1BFRACKTZ6eKe3",
          "name": "PDF.co account"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendDocument",
        "chatId": "=1380183859",
        "file": "={{ $json.url }}",
        "additionalFields": {}
      },
      "id": "c77bc3ad-baf6-463e-a015-51260edbe52b",
      "name": "Enviar PDF (Telegram)",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        528,
        48
      ],
      "webhookId": "47f3a43f-26b3-4111-a5c0-67b5d36cd334",
      "credentials": {
        "telegramApi": {
          "id": "0cS1NXwkCYeYHNOb",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "No entend√≠. Escribe `cat√°logo`, `precio grava`, `stock arena`, `cotiza 10 m3 de grava ...` o `cotizaci√≥n PDF`.",
        "additionalFields": {}
      },
      "id": "00d79fc3-c030-4d6f-93e7-20faf2fe10e3",
      "name": "Desconocido ‚Üí Ayuda",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -2000,
        1648
      ],
      "webhookId": "9a9bb0ea-9af9-4b2e-a5ee-1885c91bdac9",
      "credentials": {
        "telegramApi": {
          "id": "0cS1NXwkCYeYHNOb",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "fb126351-5a24-4b81-be8c-734c68ad490a",
      "name": "_NoOp_help",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -1184,
        -704
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "33ec6a92-15ac-4477-8024-c2e9a93a55a5",
      "name": "_NoOp_catalogo",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -1200,
        -336
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e91867dd-3c3d-489b-8d3f-9094803c782e",
      "name": "_NoOp_precio",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -1200,
        -528
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "38a4d840-1dcf-4680-88c3-8593239b85aa",
      "name": "_NoOp_stock",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -1200,
        -144
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "9c120cab-70e4-465f-b79d-246f4c35f5eb",
      "name": "_NoOp_cotizacion_chat",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -1200,
        432
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "77ea8e72-1478-43c7-9e51-5b67877107f3",
      "name": "_NoOp_cotizacion_pdf",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -1200,
        240
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "cf294554-2e7c-41df-97c1-90b22c091aa2",
      "name": "_NoOp_otherwise",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -2224,
        1648
      ]
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "=={{ ($json.intent ?? $item(0,'Parse Intent JSON').json.intent ?? 'help')    .toString().trim().toLowerCase() }}",
        "rules": {
          "rules": [
            {
              "value2": "0 \"ayuda\"",
              "outputKey": "=\"ayuda\""
            },
            {
              "value2": "=1 \"catalogo\"",
              "outputKey": "\"catalogo\""
            },
            {
              "value2": "={{3}}",
              "outputKey": "\"precio\""
            },
            {
              "value2": 1,
              "outputKey": "_NoOp_stock\""
            },
            {
              "value2": "\"cotizacionpdf\"",
              "outputKey": "\"_NoOp_cotizacion_pdf\""
            },
            {
              "outputKey": "_NoOp_cotizacion_pdf\""
            }
          ]
        },
        "fallbackOutput": 1
      },
      "id": "21fc8bfc-4140-46e0-bee9-38f5cc63158d",
      "name": "Switch Intenci√≥n1",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 2,
      "position": [
        -2224,
        1072
      ],
      "disabled": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=estare haciendo peticiones sobre una tabla precisamente esta, prepara un mensaje segun lo que este solicitando en base a esta tabla\neso es lo que se pide\n{{ $('Telegram Trigger').item.json.message.text }}\n\n{{ $('Clasificar Intenci√≥n (AI)').item.json.output }}\n{{ $json.row_number }},{{ $json.material }},{{ $json['precio\t'] }},{{ $json['slug '] }},{{ $json['precio\t']  }},{{ $json['slug '] }}\n\n\nlo que se desea saber  \n\n\n\nformatealo para telegram que no sea json",
        "options": {
          "systemMessage": "=Responde √∫nicamente con JSON v√°lido, sin texto extra. para telegram "
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -720,
        -240
      ],
      "id": "f059ad1f-9520-4cd6-8235-e35beb0d57b1",
      "name": "interprete respuesta"
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{ ($json.intent ?? $item(0, 'Parse Intent JSON').json.intent ?? 'help').toString().trim().toLowerCase() }}",
        "rules": {
          "rules": [
            {
              "value2": "saludo",
              "outputKey": "Bienvenida"
            },
            {
              "value2": "finalizar",
              "outputKey": "Mensaje_Despedida"
            },
            {
              "value2": "help",
              "outputKey": "_NoOp_help"
            },
            {
              "value2": "catalogo",
              "outputKey": "_NoOp_catalogo"
            },
            {
              "value2": "precio",
              "outputKey": "_NoOp_precio"
            },
            {
              "value2": "stock",
              "outputKey": "_NoOp_stock"
            },
            {
              "value2": "cotizacion_chat",
              "outputKey": "_NoOp_cotizacion_chat"
            },
            {
              "value2": "cotizacion_pdf",
              "outputKey": "_NoOp_cotizacion_pdf"
            }
          ]
        }
      },
      "id": "a851bf30-4ba3-4f2c-9493-26864ca60b2b",
      "name": "Switch Intenci√≥n",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 2,
      "position": [
        -1424,
        -624
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=hazme una cotizacion con todos los dato de la misma que pedieron con total los itbis sumado y detalles en html y css que devuelves en un output\nDATOS A PPONER LA FACTURA\n{{ $json['precio\t'] }}\n {{ $json.material }}\nHAZLO BIEN ESTILIZADO\n{{ $('Extraer Datos (AI‚ÜíJSON)').item.json.output }}\n{{ $json['itbis\t'] }}{{ $('Parse JSON Cotizaci√≥n').item.json.items[0] }}",
        "options": {
          "systemMessage": "SOLO MANDA O DEVUELVE HTML Y CSS INLINE LISTO PARA COMPILAR SOLO ESO SIN NADA EXTRA\n\n\n\nSOLO UN ARCHIVO  HTML CSS CON TODOS LOS DATOS"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -48,
        48
      ],
      "id": "da5c83f7-75a2-47c5-8f96-89cda962d9b8",
      "name": "HTML CSS"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Clasificar Intenci√≥n (AI)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Groq Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Clasificar Intenci√≥n (AI)",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Extraer Datos (AI‚ÜíJSON)",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "interprete respuesta",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "HTML CSS",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Clasificar Intenci√≥n (AI)",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "Extraer Datos (AI‚ÜíJSON)",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "HTML CSS",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Clasificar Intenci√≥n (AI)": {
      "main": [
        [
          {
            "node": "Parse Intent JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Intent JSON": {
      "main": [
        [
          {
            "node": "Switch Intenci√≥n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leer Cat√°logo (Sheets)": {
      "main": [
        [
          {
            "node": "interprete respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Formatear Respuesta Cat√°logo/Precio/Stock": {
      "main": [
        []
      ]
    },
    "Extraer Datos (AI‚ÜíJSON)": {
      "main": [
        [
          {
            "node": "Parse JSON Cotizaci√≥n",
            "type": "main",
            "index": 0
          },
          {
            "node": "Pedir Datos Faltantes",
            "type": "main",
            "index": 0
          },
          {
            "node": "Guardar Cotizaci√≥n (Sheets)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Enviar Resumen (Chat)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse JSON Cotizaci√≥n": {
      "main": [
        [
          {
            "node": "Leer Cat√°logo (para c√°lculo)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Leer Cat√°logo (para c√°lculo)": {
      "main": [
        [
          {
            "node": "HTML CSS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calcular Cotizaci√≥n (Code)": {
      "main": [
        []
      ]
    },
    "Construir HTML (Code)": {
      "main": [
        []
      ]
    },
    "PDFco Api": {
      "main": [
        [
          {
            "node": "Enviar PDF (Telegram)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Bienvenida": {
      "main": [
        []
      ]
    },
    "Guardar Cotizaci√≥n (Sheets)": {
      "main": [
        []
      ]
    },
    "Switch Intenci√≥n1": {
      "main": [
        [],
        [],
        [],
        [],
        [],
        [],
        []
      ]
    },
    "_NoOp_help": {
      "main": [
        [
          {
            "node": "Ayuda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "_NoOp_catalogo": {
      "main": [
        [
          {
            "node": "Leer Cat√°logo (Sheets)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "_NoOp_precio": {
      "main": [
        [
          {
            "node": "Leer Cat√°logo (Sheets)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "_NoOp_stock": {
      "main": [
        [
          {
            "node": "Leer Cat√°logo (Sheets)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "_NoOp_cotizacion_chat": {
      "main": [
        [
          {
            "node": "Leer Cat√°logo (Sheets)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "_NoOp_cotizacion_pdf": {
      "main": [
        [
          {
            "node": "Extraer Datos (AI‚ÜíJSON)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "_NoOp_otherwise": {
      "main": [
        [
          {
            "node": "Desconocido ‚Üí Ayuda",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "interprete respuesta": {
      "main": [
        [
          {
            "node": "Enviar Respuesta",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch Intenci√≥n": {
      "main": [
        [
          {
            "node": "Bienvenida",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [
          {
            "node": "_NoOp_help",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "_NoOp_catalogo",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "_NoOp_precio",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "_NoOp_stock",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "_NoOp_cotizacion_pdf",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "_NoOp_cotizacion_pdf",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML CSS": {
      "main": [
        [
          {
            "node": "PDFco Api",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a9b01367-25c9-40c8-a835-2c6dd1a26133",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "20ead549f3c36919b86f5731cec575d69f94948e68df82e1460bc44fced0c821"
  },
  "id": "H5MzRnN3Oamyvb6h",
  "tags": []
}